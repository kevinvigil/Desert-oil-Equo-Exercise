<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="14412fb9-1428-4572-b797-6d92ae7a8e43" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="desert-oil-exploration-drones" type="f1a62948:ProjectNode" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Enum" />
        <option value="Exception" />
        <option value="Kotlin Class" />
        <option value="JUnit5 Test Class" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2qpE0C0ypTWacoyYJ5vf7Ksjko5" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
    <option name="sortKey" value="BY_TIME_DESCENDING" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Gradle.CommandProcessorTest.applyMovementsTestInputGoAutOfRange.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.CommandProcessorTest.applyMovementsTestWrongInput.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.CommandProcessorTest.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.CommandProcessorTest.processCommandTest.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.CommandProcessorTest.processCommandTestCorrectInput.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.CommandProcessorTest.processCommandTestInputGoAutOfRange.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.CommandProcessorTest.processCommandTestWrongInput.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.CommandProcessorTest.shouldReachExpectedCoordinatesAndHeading.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.CommandProcessorTest.shouldReachExpectedCoordinatesAndHeadingWhenMultipleExecution.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.CommandProcessorTest.shouldReachExpectedCoordinatesAndHeadingWhenSingleExecution.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.ExerciseServerTest.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.ExerciseServerTest.shouldCreateDrone.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.ExerciseServerTest.shouldCreatePlateau.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.ExerciseServerTest.shouldMoveTheDrone.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.ExerciseServerTest.testDroneMoveEndpoint.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.Tests in 'desert-oil-exploration-drones'.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.desert-oil-exploration-drones [:equo.drones.com.DroneControlServer.main()].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.desert-oil-exploration-drones [:equo.drones.com.Main.main()].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.desert-oil-exploration-drones:api-rest [:api-rest:equo.drones.com.DroneHttpServer.main()].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.desert-oil-exploration-drones:api-rest [:api-rest:equo.drones.com.ExerciseServer.main()].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.desert-oil-exploration-drones:api-rest [:api-rest:equo.drones.com.HttpServer.main()].executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,
    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/core/src/main/java/equo/drones/com" />
    </key>
    <key name="CreateTestDialog.Recents.Supers">
      <recent name="" />
    </key>
    <key name="CreateTestDialog.RecentsKey">
      <recent name="equo.drones.com" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="equo.drones.com" />
      <recent name="equo.drones.com.model" />
    </key>
  </component>
  <component name="RunManager" selected="Gradle.CommandProcessorTest">
    <configuration name="CommandProcessorTest" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":core:test" />
            <option value="--tests" />
            <option value="&quot;equo.drones.com.CommandProcessorTest&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="CommandProcessorTest.shouldReachExpectedCoordinatesAndHeadingWhenSingleExecution" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":core:test" />
            <option value="--tests" />
            <option value="&quot;equo.drones.com.CommandProcessorTest.shouldReachExpectedCoordinatesAndHeadingWhenSingleExecution&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="ExerciseServerTest" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":api-rest:test" />
            <option value="--tests" />
            <option value="&quot;equo.drones.com.ExerciseServerTest&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="ExerciseServerTest.shouldCreateDrone" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":api-rest:test" />
            <option value="--tests" />
            <option value="&quot;equo.drones.com.ExerciseServerTest.shouldCreateDrone&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="ExerciseServerTest.shouldCreatePlateau" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":api-rest:test" />
            <option value="--tests" />
            <option value="&quot;equo.drones.com.ExerciseServerTest.shouldCreatePlateau&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Gradle.CommandProcessorTest" />
        <item itemvalue="Gradle.ExerciseServerTest" />
        <item itemvalue="Gradle.CommandProcessorTest.shouldReachExpectedCoordinatesAndHeadingWhenSingleExecution" />
        <item itemvalue="Gradle.ExerciseServerTest.shouldCreateDrone" />
        <item itemvalue="Gradle.ExerciseServerTest.shouldCreatePlateau" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-b114ca120d71-intellij.indexing.shared.core-IU-242.21829.142" />
        <option value="bundled-js-predefined-d6986cc7102b-7c0b70fcd90d-JavaScript-IU-242.21829.142" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="14412fb9-1428-4572-b797-6d92ae7a8e43" name="Changes" comment="" />
      <created>1735350898136</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1735350898136</updated>
      <workItem from="1735350899221" duration="6435000" />
      <workItem from="1735392281992" duration="16800000" />
      <workItem from="1735518601116" duration="37901000" />
      <workItem from="1735599081086" duration="354000" />
      <workItem from="1735599483828" duration="2000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>